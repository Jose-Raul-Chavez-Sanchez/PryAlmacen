/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Negocio.EMovimientos;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import Modelos.Movimientos;
import static Presentacion.ExportExcelUtil.createBody;
import static Presentacion.ExportExcelUtil.createCaption;
import static Presentacion.ExportExcelUtil.createThead;
import java.io.File;
import java.io.FileOutputStream;
import java.util.LinkedHashMap;
import java.util.List;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;


public class FrmListadoNotasIngreso extends javax.swing.JFrame implements IFormActive{
    
    Movimientos clsNotaIngreso = new Movimientos();
    
    DefaultTableModel defaultTable =new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };  
    /**
     * Creates new form FromListadoNotasIngreso
     */
    public FrmListadoNotasIngreso() {
        initComponents();
        
        this.setLocationRelativeTo(this);
        this.setResizable(false);
        
        this.defaultTable.addColumn("Id");
        this.defaultTable.addColumn("Fecha de Ingreso");
        this.defaultTable.addColumn("Serie");
        this.defaultTable.addColumn("NÃºmero");
        this.defaultTable.addColumn("Observaciones");
        this.defaultTable.addColumn("Estado");
        this.defaultTable.addColumn("Usuario");
        this.tblNotasIngreso.setModel(defaultTable);
        
        tblNotasIngreso.setRowHeight(25);
        TableColumnModel columnModel = tblNotasIngreso.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(15);
        columnModel.getColumn(1).setPreferredWidth(50);
        columnModel.getColumn(2).setPreferredWidth(20);
        columnModel.getColumn(3).setPreferredWidth(30);
        columnModel.getColumn(4).setPreferredWidth(200);
        columnModel.getColumn(5).setPreferredWidth(30);
        columnModel.getColumn(6).setPreferredWidth(100);
        
        loadTable();
    }
    
    @Override
    public void loadTable()
    {
       try{
            
            for (int i=this.defaultTable.getRowCount()-1;i>=0;i--){
                this.defaultTable.removeRow(i);
            }
            
            int tipoMovId = 1; //1=NOTA DE INGRESO
            ArrayList arrayList = clsNotaIngreso.getAllByIdMov(tipoMovId);
            
            for (int i = 0; i < arrayList.size(); i++) {
                EMovimientos notaIngreso = (EMovimientos)arrayList.get(i);
                this.defaultTable.addRow(new Object[]{});
                this.defaultTable.setValueAt(notaIngreso.getId(), i, 0);
                this.defaultTable.setValueAt(notaIngreso.getFechaRegistro(), i, 1);
                this.defaultTable.setValueAt(notaIngreso.getSerie(), i, 2);
                this.defaultTable.setValueAt(notaIngreso.getNumero(), i, 3);
                this.defaultTable.setValueAt(notaIngreso.getObservaciones(), i, 4);
                this.defaultTable.setValueAt(notaIngreso.getEstado(), i, 5);
                this.defaultTable.setValueAt(notaIngreso.getUsuario().getNombres(), i, 6);
            }
            
            EColorTableCell foreColor = new EColorTableCell();
            foreColor.setColumnIndex(5);
            tblNotasIngreso.getColumnModel().getColumn(5).setCellRenderer(foreColor);
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.toString(), Module.titleMessage, JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        dtpFechaFinal = new com.toedter.calendar.JDateChooser();
        btnSearch = new javax.swing.JButton();
        btnAnularNota = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnExportar = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotasIngreso = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        dtpFechaInicio = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Listado de Notas de Ingreso");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("FECHA FINAL");

        dtpFechaFinal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnSearch.setBackground(new java.awt.Color(70, 70, 255));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("BUSCAR");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAnularNota.setBackground(new java.awt.Color(237, 46, 27));
        btnAnularNota.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAnularNota.setForeground(new java.awt.Color(255, 255, 255));
        btnAnularNota.setText("ANULAR NOTA INGRESO");
        btnAnularNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularNotaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("BUSCAR");

        btnExportar.setBackground(new java.awt.Color(30, 152, 61));
        btnExportar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExportar.setForeground(new java.awt.Color(255, 255, 255));
        btnExportar.setText("EXPORTAR EXCEL");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        tblNotasIngreso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FECHA INGRESO", "SERIE", "NUMERO", "OBSERVACIONES", "ESTADO", "USUARIO"
            }
        ));
        tblNotasIngreso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNotasIngresoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNotasIngreso);

        btnNew.setBackground(new java.awt.Color(70, 70, 255));
        btnNew.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setText("NUEVA NOTA INGRESO");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("FECHA INICIO");

        dtpFechaInicio.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dtpFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(dtpFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnExportar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAnularNota)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dtpFechaInicio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dtpFechaFinal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(5, 5, 5)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btnAnularNota, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnExportar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        EForm formActive = Module.formActive;
        formActive.setCaller(this);

        FrmNotaIngreso formNI = new FrmNotaIngreso();
        formNI.setVisible(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblNotasIngresoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNotasIngresoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblNotasIngresoMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        try{

            String txtNombre = this.txtSearch.getText().trim();
            if(txtNombre.equals("")){
                loadTable();
                return;
            }

            for (int i=this.defaultTable.getRowCount()-1;i>=0;i--){
                this.defaultTable.removeRow(i);
            }

            int tipoMovId = 1; //1=NOTA DE INGRESO

            ArrayList arrayList = clsNotaIngreso.filterNotes(tipoMovId, txtNombre);

            for (int i = 0; i < arrayList.size(); i++) {
                EMovimientos notaIngreso = (EMovimientos)arrayList.get(i);
                this.defaultTable.addRow(new Object[]{});
                this.defaultTable.setValueAt(notaIngreso.getId(), i, 0);
                this.defaultTable.setValueAt(notaIngreso.getFechaRegistro(), i, 1);
                this.defaultTable.setValueAt(notaIngreso.getSerie(), i, 2);
                this.defaultTable.setValueAt(notaIngreso.getNumero(), i, 3);
                this.defaultTable.setValueAt(notaIngreso.getObservaciones(), i, 4);
                this.defaultTable.setValueAt(notaIngreso.getEstado(), i, 5);
                this.defaultTable.setValueAt(notaIngreso.getUsuario().getNombres(), i, 6);
            }

        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.toString(), Module.titleMessage, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnAnularNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularNotaActionPerformed
        // TODO add your handling code here:

        if(tblNotasIngreso.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "No existe registros de notas de ingreso", Module.titleMessage, JOptionPane.CANCEL_OPTION);
            return;
        }
        if(tblNotasIngreso.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione una nota de ingreso para anular", Module.titleMessage, JOptionPane.CANCEL_OPTION);
            return;
        }

        int pos = tblNotasIngreso.getSelectedRow();
        int id = (int) tblNotasIngreso.getValueAt(pos, 0);
        String serie = tblNotasIngreso.getValueAt(pos, 2).toString();
        String numero = tblNotasIngreso.getValueAt(pos, 3).toString();
        String estado = tblNotasIngreso.getValueAt(pos, 5).toString();

        if(estado.equals("ANULADO")){
            JOptionPane.showMessageDialog(null, "La nota de ingreso ya estÃ¡ anulada", Module.titleMessage, JOptionPane.CANCEL_OPTION);
            return;
        }

        Module.id = id;
        EForm formActive = Module.formActive;
        formActive.setCaller(this);

        FrmAnularNota formAnular = new FrmAnularNota(serie, numero, 1);
        formAnular.setVisible(true);
    }//GEN-LAST:event_btnAnularNotaActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        try{

            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            String fechaInicioStr = formatter.format(dtpFechaInicio.getDate());
            String fechaFinStr = formatter.format(dtpFechaFinal.getDate());

            for (int i=this.defaultTable.getRowCount()-1;i>=0;i--){
                this.defaultTable.removeRow(i);
            }

            int tipoMovId = 1; //1=NOTA DE INGRESO
            ArrayList arrayList = clsNotaIngreso.getAllByDates(tipoMovId, fechaInicioStr, fechaFinStr);

            for (int i = 0; i < arrayList.size(); i++) {
                EMovimientos notaIngreso = (EMovimientos)arrayList.get(i);
                this.defaultTable.addRow(new Object[]{});
                this.defaultTable.setValueAt(notaIngreso.getId(), i, 0);
                this.defaultTable.setValueAt(notaIngreso.getFechaRegistro(), i, 1);
                this.defaultTable.setValueAt(notaIngreso.getSerie(), i, 2);
                this.defaultTable.setValueAt(notaIngreso.getNumero(), i, 3);
                this.defaultTable.setValueAt(notaIngreso.getObservaciones(), i, 4);
                this.defaultTable.setValueAt(notaIngreso.getEstado(), i, 5);
                this.defaultTable.setValueAt(notaIngreso.getUsuario().getNombres(), i, 6);
            }

        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.toString(), Module.titleMessage, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        // TODO add your handling code here:
        try{
                       
            List<LinkedHashMap<String, String>> listProd = new ArrayList<>();
            
            for (int i = 0; i < this.defaultTable.getRowCount(); i++){
                LinkedHashMap<String, String> map = new LinkedHashMap<>();
                map.put("id", this.defaultTable.getValueAt(i, 0).toString());
                map.put("fechaingreso", this.defaultTable.getValueAt(i, 1).toString());
                map.put("serie", this.defaultTable.getValueAt(i, 2).toString());
                map.put("numero", this.defaultTable.getValueAt(i, 3).toString());
                map.put("observaciones", this.defaultTable.getValueAt(i, 4).toString());
                map.put("estado", this.defaultTable.getValueAt(i, 5).toString());
                map.put("usuario", this.defaultTable.getValueAt(i, 6).toString());
                listProd.add(map);
            }
            
            String fileName = "Reporte-de-notas-de-ingreso.xls";
            String titleReport = "Reporte General de Notas de Ingreso";
            String sheetName = "Notas de Ingreso";
            String filePath = "C:\\ReportesJava";
            
            File directory = new File(filePath);
            if (!directory.exists()) {
                if (directory.mkdirs()) {
                    System.out.println("Directorio creado "+filePath);
                }
            }
            
            String[] alignText = {"C", "C", "C", "C", "L", "C", "L"};
            String[] columnsHead = {"Id", "Fecha de Ingreso", "Serie", "NÃºmero", "Observaciones", "Estado", "Usuario"};
            int[] columnsWidth = {2000, 3500, 3000, 3000, 12500, 3000, 7000};
            
            ExportExcelUtil.alignText = alignText;
            
            try (HSSFWorkbook workbook = new HSSFWorkbook ()) {
                HSSFSheet sheet = workbook.createSheet (sheetName);
                sheet.setGridsPrinted(false);
                sheet.setPrintGridlines(false);
                sheet.setDisplayGridlines(false);
                
                createCaption(workbook, sheet, titleReport, 6);
                createThead(workbook, sheet, columnsHead, columnsWidth);
                createBody(workbook, sheet, listProd);
                
                String fullPath = filePath + File.separator + fileName;
                try (FileOutputStream outputStream = new FileOutputStream(new File(fullPath))) {
                    workbook.write(outputStream);
                    outputStream.close();
                    workbook.close();
                }
            }
            
            int dialogConfirm = JOptionPane.showConfirmDialog(null, "Excel exportado con Ã©xito. \nÂ¿Desea abrir el archivo exportado?", Module.titleMessage, JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if(dialogConfirm == 0){
                Runtime.getRuntime().exec("cmd /c start C:\\\"ReportesJava\"\\"+fileName);
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.toString(), Module.titleMessage, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListadoNotasIngreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListadoNotasIngreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListadoNotasIngreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListadoNotasIngreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmListadoNotasIngreso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnularNota;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSearch;
    private com.toedter.calendar.JDateChooser dtpFechaFinal;
    private com.toedter.calendar.JDateChooser dtpFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNotasIngreso;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
